Game.board={};
Game.board.Map=function(){var k=Game.Map,a=function(b,g,c,a,d){k.call(this,b,g,c);this.horizontalCases=a;this.verticalCases=d;this.boardMarginRight=this.boardMarginBottom=this.boardMarginLeft=this.boardMarginTop=0};classExtend(k,a);a.prototype.getHorizontalCases=function(){return this.horizontalCases};a.prototype.getVerticalCases=function(){return this.verticalCases};a.prototype.setHorizontalCases=function(b){this.horizontalCases=b};a.prototype.setVerticalCases=function(b){this.verticalCases=b};a.prototype.getBoardMarginLeft=
function(){return this.boardMarginLeft};a.prototype.getBoardMarginTop=function(){return this.boardMarginTop};a.prototype.getBoardMarginRight=function(){return this.boardMarginRight};a.prototype.getBoardMarginBottom=function(){return this.boardMarginBottom};a.prototype.setBoardMarginLeft=function(b){this.boardMarginLeft=b};a.prototype.setBoardMarginTop=function(b){this.boardMarginTop=b};a.prototype.setBoardMarginRight=function(b){this.boardMarginRight=b};a.prototype.setBoardMarginBottom=function(b){this.boardMarginBottom=
b};a.prototype.getBoardRect=function(){return this.getGameRect().clone().addMargins(-this.getBoardMarginLeft(),-this.getBoardMarginTop(),-this.getBoardMarginRight(),-this.getBoardMarginBottom())};a.prototype.getCaseWidth=function(b){return b.width()/this.getHorizontalCases()};a.prototype.getCaseHeight=function(b){return b.height()/this.getVerticalCases()};a.prototype.getCasePosition=function(b,a,c){var f=this.getCaseWidth(b),d=this.getCaseHeight(b);return new Vec2(b.left+f*(a+.5),b.top+d*(c+.5))};
a.prototype.getCaseXY=function(b,a){var c=this.getCaseWidth(b),f=this.getCaseHeight(b);return new Vec2(Math.floor((a.x-b.left)/c),Math.floor((a.y-b.top)/f))};a.prototype.getCaseShape=function(b,a,c){return this.getCaseRect(b,a,c).getShape()};a.prototype.getCaseRect=function(b,a,c){var f=this.getCaseWidth(b),d=this.getCaseHeight(b);a=b.left+f*a;b=b.top+d*c;return new Rect(a,b,a+f,b+d)};a.prototype.renderDebug=function(b){var a=this.getBoardRect();b.strokeStyle="#F00";a.draw(b,!1,!0);var c=this.getHorizontalCases(),
f=this.getCaseWidth(a),d=this.getCaseHeight(a),e=a.left,h=a.top;b.beginPath();for(a.pushPath(b);0<--c;)e+=f,b.moveTo(e,a.top),b.lineTo(e,a.bottom);for(c=this.getVerticalCases();0<c--;)h+=d,b.moveTo(a.left,h),b.lineTo(a.right,h);b.closePath();b.stroke()};var l=override(a,"showMouseOverInfos",function(b,a,c){l.call(this,b,a,c);if(this.debug){var f=this.getPointerPosition(),d=this.getBoardRect();if(d.contains(f)){c.strokeStyle="#00F";c.lineWidth*=2;var e=this.getCaseXY(d,f);c.beginPath();this.getCaseShape(d,
e.x,e.y).pushPath(c);(new Line(this.getCasePosition(d,e.x,e.y),f)).pushPath(c);c.closePath();c.stroke();c.lineWidth/=2;a=this.getObjectsAtCase(d,a,e.x,e.y);a.length&&a[0].renderMouseOver(c,f,b,this.debug)}}});a.prototype.getObjectsAtCase=function(a,g,c,f){a=g.length;for(var d,e,h,k,m,l=[];a--;)if(d=g[a],k=d.boardOccupationMatrix)e=d.getCaseX(),h=d.getCaseY(),m=k.length,h=Math.floor(m/2)+f-h,0<=h&&h<m&&(m=k[h].length,e=Math.floor(m/2)+c-e,0<=e&&e<m&&k[h][e]&&l.push(d));return l};return a}();Game.board.Object=function(){var k=Game.objects.Object.Static,a=function(a,g,c){k.call(this,a.getCasePosition(a.getBoardRect(),g,c));this.caseX=g;this.caseY=c};classExtend(k,a);a.prototype.boardMoveSpeed=100;var l=override(a,"moveOnFrame",function(a,g){l.call(this,a,g);if(this.target){var c=Vec2.translation(this.getPosition(),this.target);if(c.isZero())this.target=null;else if(c.clampMagnitude(0,this.boardMoveSpeed*g),this.move(c),c=a.getMap(),c=c.getCaseXY(c.getBoardRect(),this.getPosition()),c.x!=
this.getCaseX()||c.y!=this.getCaseY())this.setCaseX(c.x),this.setCaseY(c.y)}});a.prototype.getCaseX=function(){return this.caseX};a.prototype.setCaseX=function(a){this.caseX=a};a.prototype.getCaseY=function(){return this.caseY};a.prototype.setCaseY=function(a){this.caseY=a};a.prototype.setBoardMoveSpeed=function(a){this.boardMoveSpeed=a};a.prototype.getBoardMoveSpeed=function(){return this.boardMoveSpeed};a.prototype.moveToCase=function(a,g,c){this.target=a.getCasePosition(a.getBoardRect(),g,c)};
a.prototype.skipMovement=function(){this.move(Vec2.translation(this.getPosition(),this.target))};a.prototype.isMovementFinished=function(){return!this.target};a.prototype.boardOccupationMatrix=[[1]];a.prototype.collisionLayers=[Game.objects.Object.NO_COLLISION_LAYER];return a}();